name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

jobs:
  build-and-deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Configure Docker
      run: |
        gcloud auth configure-docker gcr.io

    - name: Build and Push Docker image
      run: |
        # Create a temporary credentials file for the build
        echo '${{ secrets.GCP_SA_KEY }}' > /tmp/credentials.json
        
        # Build with credentials and environment variables
        docker build \
          --build-arg GOOGLE_APPLICATION_CREDENTIALS="${GOOGLE_APPLICATION_CREDENTIALS}" \
          --build-arg OPENAI_API_KEY="${OPENAI_API_KEY}" \
          --build-arg GOOGLE_API_KEY="${GOOGLE_API_KEY}" \
          -t gcr.io/${PROJECT_ID}/gramfocus:${{ github.sha }} .
        
        # Clean up
        rm /tmp/credentials.json
        
        # Push the image
        docker push gcr.io/${PROJECT_ID}/gramfocus:${{ github.sha }}

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy gramfocus \
          --image gcr.io/${PROJECT_ID}/gramfocus:${{ github.sha }} \
          --platform managed \
          --region us-central1 \
          --project ${PROJECT_ID} \
          --set-env-vars="GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}" \
          --set-env-vars="OPENAI_API_KEY=${OPENAI_API_KEY}" \
          --set-env-vars="GOOGLE_API_KEY=${GOOGLE_API_KEY}" \
          --allow-unauthenticated

    - name: Verify deployment
      id: deploy
      run: |
        DEPLOY_STATUS=$(gcloud run services describe gramfocus \
          --platform managed \
          --region us-central1 \
          --project ${PROJECT_ID} \
          --format='get(status.conditions[0].status)')
        if [ "$DEPLOY_STATUS" = "True" ]; then
          echo "::set-output name=status::success"
        else
          echo "::set-output name=status::failure"
          exit 1
        fi

    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ steps.deploy.outputs.status }}" == "success" ]; then
          echo "Deployment successful!"
        else
          echo "Deployment failed!"
          exit 1
        fi
